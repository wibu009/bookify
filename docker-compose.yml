services:
  bookify.api:
    image: ${DOCKER_REGISTRY-}bookify-api
    container_name: bookify.api
    build:
      context: .
      dockerfile: src/Bookify.Api/Dockerfile
    ports:
      - "8080:8080"
      - "8081:8081"
    depends_on:
      bookify.db:
        condition: service_healthy
      bookify.idp:
        condition: service_healthy
      bookify.seq:
        condition: service_healthy
      bookify.cache:
        condition: service_healthy
      bookify.smtp:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s

  bookify.db:
    image: postgres:latest
    container_name: bookify.database
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=bookify
    volumes:
      - ./.containers/database:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  bookify.idp:
    image: quay.io/keycloak/keycloak:latest
    container_name: bookify.identity
    environment:
      - KC_HEALTH_ENABLED=true
      - KC_METRICS_ENABLED=true
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
    ports:
      - "18080:8080"
    volumes:
      - ./.containers/identity:/opt/keycloak/data
      - ./.files/keycloak/bookify-realm-export.json:/opt/keycloak/data/import/bookify-realm-export.json
    command:
      - start-dev
      - --import-realm
    healthcheck:
      test:  ['CMD-SHELL', '[ -f /tmp/HealthCheck.java ] || echo "public class HealthCheck { public static void main(String[] args) throws java.lang.Throwable { System.exit(java.net.HttpURLConnection.HTTP_OK == ((java.net.HttpURLConnection)new java.net.URL(args[0]).openConnection()).getResponseCode() ? 0 : 1); } }" > /tmp/HealthCheck.java && java /tmp/HealthCheck.java http://localhost:9000/health/live']
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s

  bookify.seq:
    image: datalust/seq:latest
    container_name: bookify.sequence
    environment:
      - ACCEPT_EULA=Y
    ports:
      - "5341:5341"
      - "8082:80"
    healthcheck:
      test: ["CMD", "true"]
      interval: 0s

  bookify.cache:
    image: redis:latest
    container_name: bookify.redis
    restart: always
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

  bookify.smtp:
    image: changemakerstudiosus/papercut-smtp:latest
    container_name: bookify.papercut
    ports:
      - "8083:8083"
      - "25:25"
    healthcheck:
      test: [ "CMD", "true" ]
      interval: 0s
